package Front;

import Conexion.ClsConexion;
import com.mysql.jdbc.Connection;
import java.awt.HeadlessException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class frmProductsC extends javax.swing.JFrame {

    ClsConexion CON;
    Connection CN;

    public frmProductsC() {
        initComponents();
        lblErrorCodigo.setVisible(false);
        lblErrorNombre.setVisible(false);
        lblErrorApodo.setVisible(false);

        lblErrorValorV.setVisible(false);

        lblErrorValorD.setVisible(false);
        this.setLocationRelativeTo(this);
        CON = new ClsConexion();
        CN = CON.getConnection();
        ListarTabla();
        Limpiar();
    }
    
    private void Limpiare() {

        // Se ocultan todos los errores
        lblErrorCodigo.setVisible(false);
        lblErrorNombre.setVisible(false);
        lblErrorApodo.setVisible(false);


        lblErrorValorV.setVisible(false);

        lblErrorValorD.setVisible(false);

    }

    private void Limpiar() {
        // Se limpian todos los campos
        txtCodigo.setText("");
        txtNombre.setText("");
        txtApodo.setText("");
 
        txtValorV.setText("0");

        txtValorD.setText("0");

        // Se ocultan todos los errores
        lblErrorCodigo.setVisible(false);
        lblErrorNombre.setVisible(false);
        lblErrorApodo.setVisible(false);

        lblErrorValorV.setVisible(false);

        lblErrorValorD.setVisible(false);

    }

    private void ListarTabla() {

        // Definición de la configuración de la tabla y sus columnas
                DefaultTableModel modelo = new DefaultTableModel(){

 public boolean isCellEditable(int row, int column)
 {
     return false;
 }
  };        
        modelo.addColumn("Codigo");
        modelo.addColumn("Nombre");
        modelo.addColumn("Apodo");
        modelo.addColumn("Cantidad De Productos");
        modelo.addColumn("Cantidad Vendida");
        modelo.addColumn("Valor De Compra");
        modelo.addColumn("Valor De Venta");
        modelo.addColumn("Valor Con Descuento");

        // Cargado de datos a la tabla
        try {
            // Comunicación con la base de datos 
            String ConsLista = "SELECT * FROM tblProducts";
            PreparedStatement PS = CN.prepareStatement(ConsLista);
            ResultSet RS = PS.executeQuery();

            // Recorer los resultados y cargalos a una lista
            while (RS.next()) {
                Object[] Lista = {RS.getString(1), RS.getString(2), RS.getString(3), RS.getString(4), RS.getString(5), RS.getString(7), RS.getString(6), RS.getString(8),};
                modelo.addRow(Lista);
            }
            tbListProducts.setModel(modelo);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane,
                    "Error al listar los datos: " + e.getMessage(),
                    "¡Error!",
                    JOptionPane.ERROR_MESSAGE);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtCodigo = new javax.swing.JTextField();
        btnRegistrar = new javax.swing.JButton();
        lblErrorCodigo = new javax.swing.JLabel();
        lblErrorApodo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbListProducts = new javax.swing.JTable();
        btnCancelar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblErrorValorV = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtApodo = new javax.swing.JTextField();
        lblErrorNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtValorD = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtValorV = new javax.swing.JTextField();
        lblErrorValorD = new javax.swing.JLabel();
        jButtonSearchCod = new javax.swing.JButton();
        jButtonSearchApo = new javax.swing.JButton();
        jButtonSearchNom = new javax.swing.JButton();
        jButtonSearchVV = new javax.swing.JButton();
        jButtonSearchVD = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestion De Productos");
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(555, 361));
        jPanel1.setLayout(null);

        txtCodigo.setBackground(new java.awt.Color(0, 153, 255));
        txtCodigo.setForeground(new java.awt.Color(51, 0, 51));
        txtCodigo.setToolTipText("");
        txtCodigo.setAlignmentY(10.0F);
        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });
        jPanel1.add(txtCodigo);
        txtCodigo.setBounds(300, 50, 186, 40);

        btnRegistrar.setBackground(new java.awt.Color(0, 0, 255));
        btnRegistrar.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnRegistrar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegistrar.setText("REGISTRAR PRODUCTO");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegistrar);
        btnRegistrar.setBounds(20, 220, 203, 40);

        lblErrorCodigo.setFont(new java.awt.Font("Lucida Sans", 0, 10)); // NOI18N
        lblErrorCodigo.setForeground(new java.awt.Color(153, 0, 0));
        lblErrorCodigo.setText("* Error, ingrese Codigo válido");
        lblErrorCodigo.setAlignmentY(10.0F);
        jPanel1.add(lblErrorCodigo);
        lblErrorCodigo.setBounds(310, 90, 142, 20);

        lblErrorApodo.setFont(new java.awt.Font("Lucida Sans", 0, 10)); // NOI18N
        lblErrorApodo.setForeground(new java.awt.Color(153, 0, 0));
        lblErrorApodo.setText("* Error, ingrese Apodo válido");
        lblErrorApodo.setAlignmentY(10.0F);
        jPanel1.add(lblErrorApodo);
        lblErrorApodo.setBounds(690, 90, 139, 13);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel1.setText("CODIGO DEL PRODUCTO");
        jLabel1.setAlignmentY(10.0F);
        jPanel1.add(jLabel1);
        jLabel1.setBounds(310, 30, 172, 30);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel2.setText("APODO DEL PRODUCTO");
        jLabel2.setAlignmentY(10.0F);
        jPanel1.add(jLabel2);
        jLabel2.setBounds(690, 30, 166, 18);

        tbListProducts.setAutoCreateRowSorter(true);
        tbListProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbListProducts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TblProductsMouseClick(evt);
            }
        });
        jScrollPane1.setViewportView(tbListProducts);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(240, 215, 1200, 350);

        btnCancelar.setBackground(new java.awt.Color(0, 0, 255));
        btnCancelar.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar);
        btnCancelar.setBounds(20, 520, 203, 40);

        btnActualizar.setBackground(new java.awt.Color(0, 0, 255));
        btnActualizar.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnActualizar.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizar.setText("ACTUALIZAR LISTA");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(btnActualizar);
        btnActualizar.setBounds(20, 420, 203, 40);

        btnLimpiar.setBackground(new java.awt.Color(0, 0, 255));
        btnLimpiar.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        btnLimpiar.setText("LIMPIAR REGISTRO");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        jPanel1.add(btnLimpiar);
        btnLimpiar.setBounds(20, 320, 203, 40);

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 3, 24)); // NOI18N
        jLabel4.setText("LISTA DE PRODUCTOS");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(690, 175, 272, 30);

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel9.setText("VALOR DE VENTA");
        jLabel9.setAlignmentY(10.0F);
        jPanel1.add(jLabel9);
        jLabel9.setBounds(870, 30, 122, 18);

        lblErrorValorV.setFont(new java.awt.Font("Lucida Sans", 0, 10)); // NOI18N
        lblErrorValorV.setForeground(new java.awt.Color(153, 0, 0));
        lblErrorValorV.setText("* Error, ingrese valor valido");
        lblErrorValorV.setAlignmentY(10.0F);
        jPanel1.add(lblErrorValorV);
        lblErrorValorV.setBounds(870, 90, 132, 13);

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel3.setText("NOMBRE DEL PRODUCTO");
        jLabel3.setAlignmentY(10.0F);
        jPanel1.add(jLabel3);
        jLabel3.setBounds(500, 30, 178, 18);

        txtApodo.setBackground(new java.awt.Color(0, 153, 255));
        txtApodo.setForeground(new java.awt.Color(51, 0, 51));
        txtApodo.setToolTipText("");
        txtApodo.setAlignmentY(10.0F);
        txtApodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApodoActionPerformed(evt);
            }
        });
        jPanel1.add(txtApodo);
        txtApodo.setBounds(690, 50, 166, 35);

        lblErrorNombre.setFont(new java.awt.Font("Lucida Sans", 0, 10)); // NOI18N
        lblErrorNombre.setForeground(new java.awt.Color(153, 0, 0));
        lblErrorNombre.setText("* Error, ingrese Nombre válido");
        lblErrorNombre.setAlignmentY(10.0F);
        jPanel1.add(lblErrorNombre);
        lblErrorNombre.setBounds(500, 90, 146, 13);

        txtNombre.setBackground(new java.awt.Color(0, 153, 255));
        txtNombre.setForeground(new java.awt.Color(51, 0, 51));
        txtNombre.setToolTipText("");
        txtNombre.setAlignmentY(10.0F);
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        jPanel1.add(txtNombre);
        txtNombre.setBounds(500, 50, 178, 35);

        txtValorD.setBackground(new java.awt.Color(0, 153, 255));
        txtValorD.setForeground(new java.awt.Color(51, 0, 51));
        txtValorD.setToolTipText("");
        txtValorD.setAlignmentY(10.0F);
        txtValorD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorDActionPerformed(evt);
            }
        });
        txtValorD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValorDKeyTyped(evt);
            }
        });
        jPanel1.add(txtValorD);
        txtValorD.setBounds(1020, 50, 182, 35);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Logo.png"))); // NOI18N
        jPanel1.add(jLabel5);
        jLabel5.setBounds(40, 30, 168, 164);

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel10.setText("VALOR CON DESCUENTO");
        jLabel10.setAlignmentY(10.0F);
        jPanel1.add(jLabel10);
        jLabel10.setBounds(1020, 30, 182, 18);

        txtValorV.setBackground(new java.awt.Color(0, 153, 255));
        txtValorV.setForeground(new java.awt.Color(51, 0, 51));
        txtValorV.setToolTipText("");
        txtValorV.setAlignmentY(10.0F);
        txtValorV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorVActionPerformed(evt);
            }
        });
        txtValorV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValorVKeyTyped(evt);
            }
        });
        jPanel1.add(txtValorV);
        txtValorV.setBounds(870, 50, 132, 35);

        lblErrorValorD.setFont(new java.awt.Font("Lucida Sans", 0, 10)); // NOI18N
        lblErrorValorD.setForeground(new java.awt.Color(153, 0, 0));
        lblErrorValorD.setText("* Error, ingrese valor valido");
        lblErrorValorD.setAlignmentY(10.0F);
        jPanel1.add(lblErrorValorD);
        lblErrorValorD.setBounds(1020, 90, 132, 13);

        jButtonSearchCod.setBackground(new java.awt.Color(0, 0, 255));
        jButtonSearchCod.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jButtonSearchCod.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSearchCod.setText("BUSCAR");
        jButtonSearchCod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchCodActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSearchCod);
        jButtonSearchCod.setBounds(300, 120, 186, 40);

        jButtonSearchApo.setBackground(new java.awt.Color(0, 0, 255));
        jButtonSearchApo.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jButtonSearchApo.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSearchApo.setText("BUSCAR");
        jButtonSearchApo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchApoActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSearchApo);
        jButtonSearchApo.setBounds(690, 120, 166, 40);

        jButtonSearchNom.setBackground(new java.awt.Color(0, 0, 255));
        jButtonSearchNom.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jButtonSearchNom.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSearchNom.setText("BUSCAR");
        jButtonSearchNom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchNomActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSearchNom);
        jButtonSearchNom.setBounds(500, 120, 181, 40);

        jButtonSearchVV.setBackground(new java.awt.Color(0, 0, 255));
        jButtonSearchVV.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jButtonSearchVV.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSearchVV.setText("BUSCAR");
        jButtonSearchVV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchVVActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSearchVV);
        jButtonSearchVV.setBounds(870, 120, 138, 40);

        jButtonSearchVD.setBackground(new java.awt.Color(0, 0, 255));
        jButtonSearchVD.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jButtonSearchVD.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSearchVD.setText("BUSCAR");
        jButtonSearchVD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchVDActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSearchVD);
        jButtonSearchVD.setBounds(1020, 120, 182, 40);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1459, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        Limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        ListarTabla();
        Limpiar();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        String Codigo = txtCodigo.getText();
        String Nombre = txtNombre.getText();
        String Apodo = txtApodo.getText();

        double ValorD = Double.parseDouble(txtValorD.getText());

        double ValorV = Double.parseDouble(txtValorV.getText());

         if (Codigo.equals("")) {
            Limpiare();
            lblErrorCodigo.setVisible(true);
            txtCodigo.requestFocus();
        } else if (Nombre.equals("")) {
            Limpiare();

            lblErrorNombre.setVisible(true);
            txtNombre.requestFocus();
        } else if (Apodo.equals("")) {
            Limpiare();

            lblErrorApodo.setVisible(true);
            txtApodo.requestFocus();

        } else if (ValorV == 0) {
            Limpiare();

            lblErrorValorV.setVisible(true);
            txtValorV.requestFocus();
        } else if (ValorD == 0) {
            Limpiare();

            lblErrorValorD.setVisible(true);
            txtValorD.requestFocus();
        } else {
            try {
                String ValCodigo = "SELECT * FROM TblProducts WHERE Codigo='" + Codigo + "'";
                PreparedStatement PS = CN.prepareStatement(ValCodigo);
                ResultSet RS = PS.executeQuery();
                if (RS.next()) {
                    JOptionPane.showMessageDialog(rootPane, "¡Error! el Producto ya existe en la BD");
                } else {
                    String ConsInser = "INSERT INTO tblProducts(Codigo,"
                            + " Nombre,"
                            + " Apodo,"                       
                            + " ValorV,"
                            + " ValorD ) "
                            + "VALUES ('" + Codigo + "','" + Nombre + "','" + Apodo + "','" + ValorV + "','" + ValorD + "')";
                    PreparedStatement PS1 = CN.prepareStatement(ConsInser);
                    PS1.executeUpdate();
                    JOptionPane.showMessageDialog(rootPane, "Producto registrado con éxito");
                    ListarTabla();
                    Limpiar();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,
                        "Error en el registro:" + e.getMessage(),
                        "¡Error!",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void txtApodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApodoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApodoActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtValorDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorDActionPerformed

    private void txtValorVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorVActionPerformed

    private void jButtonSearchCodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchCodActionPerformed
        String Codigo = txtCodigo.getText();

        if (!Codigo.equalsIgnoreCase("")) {
            try {
                      DefaultTableModel modelo = new DefaultTableModel(){

 public boolean isCellEditable(int row, int column)
 {
     return false;
 }
  };        
                modelo.addColumn("Codigo");
                modelo.addColumn("Nombre");
                modelo.addColumn("Apodo");
                modelo.addColumn("Cantidad De Productos");
                modelo.addColumn("Cantidad Vendida");
                modelo.addColumn("Valor De Compra");
                modelo.addColumn("Valor De Venta");
                modelo.addColumn("Valor Con Descuento");

                String ConsBuscar = "SELECT * FROM TblProducts WHERE Codigo LIKE'%" + Codigo + "%'";
                PreparedStatement PS = CN.prepareStatement(ConsBuscar);
                ResultSet RS = PS.executeQuery();
                if (RS.next()) {
                    do {
                        Object[] Lista = {RS.getString(1), RS.getString(2), RS.getString(3), RS.getString(4), RS.getString(5), RS.getString(7), RS.getString(6), RS.getString(8),};
                        modelo.addRow(Lista);
                    } while (RS.next());
                    tbListProducts.setModel(modelo);

                } else {
                    JOptionPane.showMessageDialog(rootPane,
                            "¡¡No existe el Producto en la base de datos!!",
                            "¡Error!",
                            JOptionPane.ERROR_MESSAGE);
                    txtCodigo.setText("");
                    txtCodigo.requestFocus();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,
                        "Error en la consulta:" + e.getMessage(),
                        "¡Error!",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Debe ingresar un Codigo para validar",
                    "¡Error!",
                    JOptionPane.ERROR_MESSAGE);
            lblErrorCodigo.setVisible(false);
            txtCodigo.requestFocus();
        }
        Limpiar();
    }//GEN-LAST:event_jButtonSearchCodActionPerformed

    private void jButtonSearchApoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchApoActionPerformed
        String Apodo = txtApodo.getText();

        if (!Apodo.equalsIgnoreCase("")) {
            try {
                        DefaultTableModel modelo = new DefaultTableModel(){

 public boolean isCellEditable(int row, int column)
 {
     return false;
 }
  };        
                modelo.addColumn("Codigo");
                modelo.addColumn("Nombre");
                modelo.addColumn("Apodo");
                modelo.addColumn("Cantidad De Productos");
                modelo.addColumn("Cantidad Vendida");
                modelo.addColumn("Valor De Compra");
                modelo.addColumn("Valor De Venta");
                modelo.addColumn("Valor Con Descuento");

                String ConsBuscar = "SELECT * FROM TblProducts WHERE Apodo LIKE'%" + Apodo + "%'";
                PreparedStatement PS = CN.prepareStatement(ConsBuscar);
                ResultSet RS = PS.executeQuery();
                if (RS.next()) {
                    do {
                        Object[] Lista = {RS.getString(1), RS.getString(2), RS.getString(3), RS.getString(4), RS.getString(5), RS.getString(7), RS.getString(6), RS.getString(8),};
                        modelo.addRow(Lista);
                    } while (RS.next());
                    tbListProducts.setModel(modelo);

                } else {
                    JOptionPane.showMessageDialog(rootPane,
                            "¡¡No existe el Producto en la base de datos!!",
                            "¡Error!",
                            JOptionPane.ERROR_MESSAGE);
                    txtApodo.setText("");
                    txtApodo.requestFocus();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,
                        "Error en la consulta:" + e.getMessage(),
                        "¡Error!",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Debe ingresar un Apodo para validar",
                    "¡Error!",
                    JOptionPane.ERROR_MESSAGE);
            lblErrorApodo.setVisible(false);
            txtApodo.requestFocus();
        }
        Limpiar();
    }//GEN-LAST:event_jButtonSearchApoActionPerformed

    private void jButtonSearchNomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchNomActionPerformed
        String Nombre = txtNombre.getText();

        if (!Nombre.equalsIgnoreCase("")) {
            try {
                       DefaultTableModel modelo = new DefaultTableModel(){

 public boolean isCellEditable(int row, int column)
 {
     return false;
 }
  };        
                modelo.addColumn("Codigo");
                modelo.addColumn("Nombre");
                modelo.addColumn("Apodo");
                modelo.addColumn("Cantidad De Productos");
                modelo.addColumn("Cantidad Vendida");
                modelo.addColumn("Valor De Compra");
                modelo.addColumn("Valor De Venta");
                modelo.addColumn("Valor Con Descuento");

                String ConsBuscar = "SELECT * FROM TblProducts WHERE Nombre LIKE'%" + Nombre + "%'";
                PreparedStatement PS = CN.prepareStatement(ConsBuscar);
                ResultSet RS = PS.executeQuery();
                if (RS.next()) {
                    do {
                        Object[] Lista = {RS.getString(1), RS.getString(2), RS.getString(3), RS.getString(4), RS.getString(5), RS.getString(7), RS.getString(6), RS.getString(8),};
                        modelo.addRow(Lista);
                    } while (RS.next());
                    tbListProducts.setModel(modelo);

                } else {
                    JOptionPane.showMessageDialog(rootPane,
                            "¡¡No existe el Producto en la base de datos!!",
                            "¡Error!",
                            JOptionPane.ERROR_MESSAGE);
                    txtNombre.setText("");
                    txtNombre.requestFocus();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,
                        "Error en la consulta:" + e.getMessage(),
                        "¡Error!",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Debe ingresar un Nombre para validar",
                    "¡Error!",
                    JOptionPane.ERROR_MESSAGE);
            lblErrorNombre.setVisible(false);
            txtNombre.requestFocus();
        }
        Limpiar();
    }//GEN-LAST:event_jButtonSearchNomActionPerformed

    private void TblProductsMouseClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TblProductsMouseClick
        try {
            int row = this.tbListProducts.getSelectedRow();
            this.txtCodigo.setText(String.valueOf(this.tbListProducts.getValueAt(row, 0)));
            this.txtNombre.setText(String.valueOf(this.tbListProducts.getValueAt(row, 1)));
            this.txtApodo.setText(String.valueOf(this.tbListProducts.getValueAt(row, 2))); 
            this.txtValorV.setText(String.valueOf(this.tbListProducts.getValueAt(row, 6)));
            this.txtValorD.setText(String.valueOf(this.tbListProducts.getValueAt(row, 7)));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane,
                    "Error en la consulta:" + e.getMessage(),
                    "¡Error!",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_TblProductsMouseClick

    private void jButtonSearchVVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchVVActionPerformed
              int ValorV = Integer.parseInt(txtValorV.getText());


        if (ValorV!=0) {
            try {
                       DefaultTableModel modelo = new DefaultTableModel(){

 public boolean isCellEditable(int row, int column)
 {
     return false;
 }
  };        
                modelo.addColumn("Codigo");
                modelo.addColumn("Nombre");
                modelo.addColumn("Apodo");
                modelo.addColumn("Cantidad De Productos");
                modelo.addColumn("Cantidad Vendida");
                modelo.addColumn("Valor De Compra");
                modelo.addColumn("Valor De Venta");
                modelo.addColumn("Valor Con Descuento");

                String ConsBuscar = "SELECT * FROM TblProducts WHERE ValorV LIKE'%" + ValorV + "%'";
                PreparedStatement PS = CN.prepareStatement(ConsBuscar);
                ResultSet RS = PS.executeQuery();
                if (RS.next()) {
                    do {
                        Object[] Lista = {RS.getString(1), RS.getString(2), RS.getString(3), RS.getString(4), RS.getString(5), RS.getString(7), RS.getString(6), RS.getString(8),};
                        modelo.addRow(Lista);
                    } while (RS.next());
                    tbListProducts.setModel(modelo);

                } else {
                    JOptionPane.showMessageDialog(rootPane,
                            "¡¡No existe el Producto en la base de datos!!",
                            "¡Error!",
                            JOptionPane.ERROR_MESSAGE);
                    txtValorV.setText("");
                    txtValorV.requestFocus();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,
                        "Error en la consulta:" + e.getMessage(),
                        "¡Error!",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Debe ingresar un valor para validar",
                    "¡Error!",
                    JOptionPane.ERROR_MESSAGE);
            lblErrorValorV.setVisible(false);
            txtValorV.requestFocus();
        }
        Limpiar();
    }//GEN-LAST:event_jButtonSearchVVActionPerformed

    private void jButtonSearchVDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchVDActionPerformed
           int ValorD = Integer.parseInt(txtValorD.getText());


        if (ValorD!=0) {
            try {
                    DefaultTableModel modelo = new DefaultTableModel(){

 public boolean isCellEditable(int row, int column)
 {
     return false;
 }
  };        
                modelo.addColumn("Codigo");
                modelo.addColumn("Nombre");
                modelo.addColumn("Apodo");
                modelo.addColumn("Cantidad De Productos");
                modelo.addColumn("Cantidad Vendida");
                modelo.addColumn("Valor De Compra");
                modelo.addColumn("Valor De Venta");
                modelo.addColumn("Valor Con Descuento");

                String ConsBuscar = "SELECT * FROM TblProducts WHERE ValorD LIKE'%" + ValorD + "%'";
                PreparedStatement PS = CN.prepareStatement(ConsBuscar);
                ResultSet RS = PS.executeQuery();
                if (RS.next()) {
                    do {
                        Object[] Lista = {RS.getString(1), RS.getString(2), RS.getString(3), RS.getString(4), RS.getString(5), RS.getString(7), RS.getString(6), RS.getString(8),};
                        modelo.addRow(Lista);
                    } while (RS.next());
                    tbListProducts.setModel(modelo);

                } else {
                    JOptionPane.showMessageDialog(rootPane,
                            "¡¡No existe el Producto en la base de datos!!",
                            "¡Error!",
                            JOptionPane.ERROR_MESSAGE);
                    txtValorD.setText("");
                    txtValorD.requestFocus();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,
                        "Error en la consulta:" + e.getMessage(),
                        "¡Error!",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Debe ingresar un valor para validar",
                    "¡Error!",
                    JOptionPane.ERROR_MESSAGE);
            lblErrorValorD.setVisible(false);
            txtValorD.requestFocus();
        }
        Limpiar();
    }//GEN-LAST:event_jButtonSearchVDActionPerformed

    private void txtValorVKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorVKeyTyped
          int key =evt.getKeyChar();
        boolean numero = key >= 48 && key <= 57;
        
        if (!numero) {
            evt.consume();
            
        }
    }//GEN-LAST:event_txtValorVKeyTyped

    private void txtValorDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorDKeyTyped
           int key =evt.getKeyChar();
        boolean numero = key >= 48 && key <= 57;
        
        if (!numero) {
            evt.consume();
            
        }
    }//GEN-LAST:event_txtValorDKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmProductsC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmProductsC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmProductsC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmProductsC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmProductsC().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton jButtonSearchApo;
    private javax.swing.JButton jButtonSearchCod;
    private javax.swing.JButton jButtonSearchNom;
    private javax.swing.JButton jButtonSearchVD;
    private javax.swing.JButton jButtonSearchVV;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblErrorApodo;
    private javax.swing.JLabel lblErrorCodigo;
    private javax.swing.JLabel lblErrorNombre;
    private javax.swing.JLabel lblErrorValorD;
    private javax.swing.JLabel lblErrorValorV;
    private javax.swing.JTable tbListProducts;
    private javax.swing.JTextField txtApodo;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtValorD;
    private javax.swing.JTextField txtValorV;
    // End of variables declaration//GEN-END:variables
}
