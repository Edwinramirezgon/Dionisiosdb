package Front;

import Conexion.ClsConexion;
import com.mysql.jdbc.Connection;
import java.awt.HeadlessException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class frmProv extends javax.swing.JFrame {

    ClsConexion CON;
    Connection CN;

    public frmProv() {
        initComponents();
        lblErrorNit.setVisible(false);
        lblErrorEmpresa.setVisible(false);
        lblErrorTelefono.setVisible(false);
        lblErrorCantiD.setVisible(false);
        lblErrorPorceD.setVisible(false);
        this.setLocationRelativeTo(this);
        CON = new ClsConexion();
        CN = CON.getConnection();
        ListarTabla();
        Limpiar();
    }

    private String SElDias() {

        String Dias = "";
        if (LUNES.isSelected()) {
            Dias += "LUNES, ";

        }
        if (MARTES.isSelected()) {
            Dias += "MARTES, ";

        }
        if (MIERCOLES.isSelected()) {
            Dias += "MIERCOLES, ";

        }
        if (JUEVES.isSelected()) {
            Dias += "JUEVES, ";

        }
        if (VIERNES.isSelected()) {
            Dias += "VIERNES, ";

        }
        if (SABADO.isSelected()) {
            Dias += "SABADO, ";

        }
        if (DOMINGO.isSelected()) {
            Dias += "DOMINGO, ";

        }
        return Dias;
    }

    private void Limpiar() {
        // Se limpian todos los campos
        txtNit.setText("");
        txtEmpresa.setText("");
        txtTelefono.setText("");
        txtCantiD.setText("0");
        txtPorceD.setText("0");
        LUNES.setSelected(false);
        MARTES.setSelected(false);
        MIERCOLES.setSelected(false);
        JUEVES.setSelected(false);
        VIERNES.setSelected(false);
        SABADO.setSelected(false);
        DOMINGO.setSelected(false);

        // Se ocultan todos los errores
        lblErrorNit.setVisible(false);
        lblErrorEmpresa.setVisible(false);
        lblErrorTelefono.setVisible(false);
        lblErrorCantiD.setVisible(false);
        lblErrorPorceD.setVisible(false);

    }

    private void ListarTabla() {

        // Definición de la configuración de la tabla y sus columnas
               DefaultTableModel modelo = new DefaultTableModel(){

 public boolean isCellEditable(int row, int column)
 {
     return false;
 }
  };        
        modelo.addColumn("Nit");
        modelo.addColumn("Empresa");
        modelo.addColumn("Telefono");
        modelo.addColumn("Dias De Entrega");
        modelo.addColumn("Cantidad Descuento");
        modelo.addColumn("Porcentaje Descuento");

        // Cargado de datos a la tabla
        try {
            // Comunicación con la base de datos 
            String ConsLista = "SELECT * FROM tblProv";
            PreparedStatement PS = CN.prepareStatement(ConsLista);
            ResultSet RS = PS.executeQuery();

            // Recorer los resultados y cargalos a una lista
            while (RS.next()) {
                Object[] Lista = {RS.getString(1), RS.getString(2), RS.getString(3), RS.getString(4), RS.getString(5), RS.getString(6),};
                modelo.addRow(Lista);
            }
            tbListProv.setModel(modelo);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane,
                    "Error al listar los datos: " + e.getMessage(),
                    "¡Error!",
                    JOptionPane.ERROR_MESSAGE);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtNit = new javax.swing.JTextField();
        btnRegistrar = new javax.swing.JButton();
        lblErrorNit = new javax.swing.JLabel();
        lblErrorTelefono = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbListProv = new javax.swing.JTable();
        btnEliminar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblErrorCantiD = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblErrorPorceD = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        lblErrorEmpresa = new javax.swing.JLabel();
        txtEmpresa = new javax.swing.JTextField();
        txtCantiD = new javax.swing.JTextField();
        txtPorceD = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButtonSearchNit = new javax.swing.JButton();
        jButtonSearchTelefono = new javax.swing.JButton();
        jButtonSearchEmpresa = new javax.swing.JButton();
        jButtonSearchCantiD = new javax.swing.JButton();
        jButtonPorceD = new javax.swing.JButton();
        LUNES = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        MARTES = new javax.swing.JCheckBox();
        MIERCOLES = new javax.swing.JCheckBox();
        JUEVES = new javax.swing.JCheckBox();
        VIERNES = new javax.swing.JCheckBox();
        SABADO = new javax.swing.JCheckBox();
        DOMINGO = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestion De Proveedores");
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(555, 361));
        jPanel1.setLayout(null);

        txtNit.setBackground(new java.awt.Color(0, 153, 255));
        txtNit.setForeground(new java.awt.Color(51, 0, 51));
        txtNit.setToolTipText("");
        txtNit.setAlignmentY(10.0F);
        txtNit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNitActionPerformed(evt);
            }
        });
        jPanel1.add(txtNit);
        txtNit.setBounds(17, 46, 160, 40);

        btnRegistrar.setBackground(new java.awt.Color(0, 0, 255));
        btnRegistrar.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnRegistrar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegistrar.setText("REGISTRAR PROVEEDOR");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegistrar);
        btnRegistrar.setBounds(18, 356, 209, 40);

        lblErrorNit.setFont(new java.awt.Font("Lucida Sans", 0, 10)); // NOI18N
        lblErrorNit.setForeground(new java.awt.Color(153, 0, 0));
        lblErrorNit.setText("* Error, ingrese Nit válido");
        lblErrorNit.setAlignmentY(10.0F);
        jPanel1.add(lblErrorNit);
        lblErrorNit.setBounds(33, 87, 122, 20);

        lblErrorTelefono.setFont(new java.awt.Font("Lucida Sans", 0, 10)); // NOI18N
        lblErrorTelefono.setForeground(new java.awt.Color(153, 0, 0));
        lblErrorTelefono.setText("* Error, ingrese Telefono válido");
        lblErrorTelefono.setAlignmentY(10.0F);
        jPanel1.add(lblErrorTelefono);
        lblErrorTelefono.setBounds(388, 86, 151, 13);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel1.setText("NIT DEL PROVEEDOR");
        jLabel1.setAlignmentY(10.0F);
        jPanel1.add(jLabel1);
        jLabel1.setBounds(28, 14, 146, 30);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel2.setText("TELEFONO DEL PROVEEDOR");
        jLabel2.setAlignmentY(10.0F);
        jPanel1.add(jLabel2);
        jLabel2.setBounds(392, 20, 198, 18);

        tbListProv.setAutoCreateRowSorter(true);
        tbListProv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbListProv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TblProvMouseClick(evt);
            }
        });
        jScrollPane1.setViewportView(tbListProv);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(245, 218, 986, 484);

        btnEliminar.setBackground(new java.awt.Color(0, 0, 255));
        btnEliminar.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("ELIMINAR PROVEEDOR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar);
        btnEliminar.setBounds(18, 476, 209, 40);

        btnCancelar.setBackground(new java.awt.Color(0, 0, 255));
        btnCancelar.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar);
        btnCancelar.setBounds(18, 646, 203, 40);

        btnModificar.setBackground(new java.awt.Color(0, 0, 255));
        btnModificar.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(255, 255, 255));
        btnModificar.setText("MODIFICAR PROVEEDOR");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jPanel1.add(btnModificar);
        btnModificar.setBounds(18, 416, 209, 40);

        btnActualizar.setBackground(new java.awt.Color(0, 0, 255));
        btnActualizar.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnActualizar.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizar.setText("ACTUALIZAR LISTA");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(btnActualizar);
        btnActualizar.setBounds(18, 596, 203, 40);

        btnLimpiar.setBackground(new java.awt.Color(0, 0, 255));
        btnLimpiar.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        btnLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        btnLimpiar.setText("LIMPIAR REGISTRO");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        jPanel1.add(btnLimpiar);
        btnLimpiar.setBounds(18, 536, 203, 40);

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 3, 24)); // NOI18N
        jLabel4.setText("LISTA DE PROVEEDORES");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(573, 176, 301, 30);

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel7.setText("CANTIDAD DESCUENTO");
        jLabel7.setAlignmentY(10.0F);
        jPanel1.add(jLabel7);
        jLabel7.setBounds(612, 20, 164, 18);

        lblErrorCantiD.setFont(new java.awt.Font("Lucida Sans", 0, 10)); // NOI18N
        lblErrorCantiD.setForeground(new java.awt.Color(153, 0, 0));
        lblErrorCantiD.setText("* Error, ingrese Cantidad válida");
        lblErrorCantiD.setAlignmentY(10.0F);
        jPanel1.add(lblErrorCantiD);
        lblErrorCantiD.setBounds(608, 92, 152, 13);

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel8.setText("PORCENTAJE DESCUENTO");
        jLabel8.setAlignmentY(10.0F);
        jPanel1.add(jLabel8);
        jLabel8.setBounds(794, 20, 186, 18);

        lblErrorPorceD.setFont(new java.awt.Font("Lucida Sans", 0, 10)); // NOI18N
        lblErrorPorceD.setForeground(new java.awt.Color(153, 0, 0));
        lblErrorPorceD.setText("* Error, ingrese porcentaje válido");
        lblErrorPorceD.setAlignmentY(10.0F);
        jPanel1.add(lblErrorPorceD);
        lblErrorPorceD.setBounds(794, 91, 160, 13);

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel3.setText("NOMBRE DEL PROVEEDOR");
        jLabel3.setAlignmentY(10.0F);
        jPanel1.add(jLabel3);
        jLabel3.setBounds(192, 20, 186, 18);

        txtTelefono.setBackground(new java.awt.Color(0, 153, 255));
        txtTelefono.setForeground(new java.awt.Color(51, 0, 51));
        txtTelefono.setToolTipText("");
        txtTelefono.setAlignmentY(10.0F);
        txtTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoActionPerformed(evt);
            }
        });
        jPanel1.add(txtTelefono);
        txtTelefono.setBounds(390, 46, 200, 35);

        lblErrorEmpresa.setFont(new java.awt.Font("Lucida Sans", 0, 10)); // NOI18N
        lblErrorEmpresa.setForeground(new java.awt.Color(153, 0, 0));
        lblErrorEmpresa.setText("* Error, ingrese Nombre válido");
        lblErrorEmpresa.setAlignmentY(10.0F);
        jPanel1.add(lblErrorEmpresa);
        lblErrorEmpresa.setBounds(198, 86, 146, 13);

        txtEmpresa.setBackground(new java.awt.Color(0, 153, 255));
        txtEmpresa.setForeground(new java.awt.Color(51, 0, 51));
        txtEmpresa.setToolTipText("");
        txtEmpresa.setAlignmentY(10.0F);
        txtEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmpresaActionPerformed(evt);
            }
        });
        jPanel1.add(txtEmpresa);
        txtEmpresa.setBounds(192, 46, 184, 35);

        txtCantiD.setBackground(new java.awt.Color(0, 153, 255));
        txtCantiD.setForeground(new java.awt.Color(51, 0, 51));
        txtCantiD.setToolTipText("");
        txtCantiD.setAlignmentY(10.0F);
        txtCantiD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantiDActionPerformed(evt);
            }
        });
        txtCantiD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantiDKeyTyped(evt);
            }
        });
        jPanel1.add(txtCantiD);
        txtCantiD.setBounds(608, 46, 168, 35);

        txtPorceD.setBackground(new java.awt.Color(0, 153, 255));
        txtPorceD.setForeground(new java.awt.Color(51, 0, 51));
        txtPorceD.setToolTipText("");
        txtPorceD.setAlignmentY(10.0F);
        txtPorceD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPorceDActionPerformed(evt);
            }
        });
        txtPorceD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPorceDKeyTyped(evt);
            }
        });
        jPanel1.add(txtPorceD);
        txtPorceD.setBounds(794, 46, 186, 35);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Logo.png"))); // NOI18N
        jPanel1.add(jLabel5);
        jLabel5.setBounds(40, 180, 168, 164);

        jButtonSearchNit.setBackground(new java.awt.Color(0, 0, 255));
        jButtonSearchNit.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jButtonSearchNit.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSearchNit.setText("BUSCAR");
        jButtonSearchNit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchNitActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSearchNit);
        jButtonSearchNit.setBounds(17, 113, 160, 40);

        jButtonSearchTelefono.setBackground(new java.awt.Color(0, 0, 255));
        jButtonSearchTelefono.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jButtonSearchTelefono.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSearchTelefono.setText("BUSCAR");
        jButtonSearchTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchTelefonoActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSearchTelefono);
        jButtonSearchTelefono.setBounds(388, 113, 202, 40);

        jButtonSearchEmpresa.setBackground(new java.awt.Color(0, 0, 255));
        jButtonSearchEmpresa.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jButtonSearchEmpresa.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSearchEmpresa.setText("BUSCAR");
        jButtonSearchEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchEmpresaActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSearchEmpresa);
        jButtonSearchEmpresa.setBounds(195, 113, 181, 40);

        jButtonSearchCantiD.setBackground(new java.awt.Color(0, 0, 255));
        jButtonSearchCantiD.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jButtonSearchCantiD.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSearchCantiD.setText("BUSCAR");
        jButtonSearchCantiD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchCantiDActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSearchCantiD);
        jButtonSearchCantiD.setBounds(608, 113, 168, 40);

        jButtonPorceD.setBackground(new java.awt.Color(0, 0, 255));
        jButtonPorceD.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jButtonPorceD.setForeground(new java.awt.Color(255, 255, 255));
        jButtonPorceD.setText("BUSCAR");
        jButtonPorceD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPorceDActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonPorceD);
        jButtonPorceD.setBounds(794, 110, 186, 40);

        LUNES.setText("LUNES");
        LUNES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LUNESActionPerformed(evt);
            }
        });
        jPanel1.add(LUNES);
        LUNES.setBounds(998, 50, 64, 21);

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel9.setText("DIAS DE ENTREGA");
        jLabel9.setAlignmentY(10.0F);
        jPanel1.add(jLabel9);
        jLabel9.setBounds(1025, 20, 137, 18);

        MARTES.setText("MARTES");
        MARTES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MARTESActionPerformed(evt);
            }
        });
        jPanel1.add(MARTES);
        MARTES.setBounds(998, 83, 74, 21);

        MIERCOLES.setText("MIERCOLES");
        MIERCOLES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIERCOLESActionPerformed(evt);
            }
        });
        jPanel1.add(MIERCOLES);
        MIERCOLES.setBounds(998, 116, 96, 21);

        JUEVES.setText("JUEVES");
        JUEVES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JUEVESActionPerformed(evt);
            }
        });
        jPanel1.add(JUEVES);
        JUEVES.setBounds(998, 149, 71, 21);

        VIERNES.setText("VIERNES");
        VIERNES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VIERNESActionPerformed(evt);
            }
        });
        jPanel1.add(VIERNES);
        VIERNES.setBounds(1113, 50, 76, 21);

        SABADO.setText("SABADO");
        SABADO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SABADOActionPerformed(evt);
            }
        });
        jPanel1.add(SABADO);
        SABADO.setBounds(1113, 83, 75, 21);

        DOMINGO.setText("DOMINGO");
        DOMINGO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DOMINGOActionPerformed(evt);
            }
        });
        jPanel1.add(DOMINGO);
        DOMINGO.setBounds(1112, 116, 85, 21);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1256, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        Limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        ListarTabla();
        Limpiar();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        String Nit = txtNit.getText();
        String Empresa = txtEmpresa.getText();
        String Telefono = txtTelefono.getText();
        String Dias = SElDias();
        int CantiD = Integer.parseInt(txtCantiD.getText());
        int PorceD = Integer.parseInt(txtPorceD.getText());

        if (Nit.equals("")) {
            lblErrorNit.setVisible(true);
            txtNit.requestFocus();
        } else if (Empresa.equals("")) {
            lblErrorEmpresa.setVisible(true);
            txtEmpresa.requestFocus();
        } else if (Telefono.equals("")) {
            lblErrorTelefono.setVisible(true);
            txtTelefono.requestFocus();
        

        } else {
            try {
                String ValNit = "SELECT * FROM TblProv WHERE Nit='" + Nit + "'";
                PreparedStatement PS = CN.prepareStatement(ValNit);
                ResultSet RS = PS.executeQuery();
                if (!RS.next()) {
                    JOptionPane.showMessageDialog(rootPane, "¡Error! el Proveedor NO existe en la BD");
                } else {
                    String ConsUpdate = "UPDATE TblProv SET Empresa='" + Empresa + "', Telefono='" + Telefono + "', Dias='" + Dias + "',CantiD='" + CantiD + "', PorceD='" + PorceD + "' WHERE Nit='" + Nit + "'";
                    PreparedStatement PS1 = CN.prepareStatement(ConsUpdate);
                    PS1.executeUpdate();
                    JOptionPane.showMessageDialog(rootPane, "Proveedor modificado con éxito");
                    Limpiar();
                    txtNit.requestFocus();
                    ListarTabla();
                }
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(rootPane,
                        "Error en el registro: " + e.getMessage(),
                        "¡Error!",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        String Nit = txtNit.getText();

        if (!Nit.equalsIgnoreCase("")) {
            try {
                String ConsBuscar = "SELECT * FROM tblProv WHERE Nit='" + Nit + "'";
                PreparedStatement PS = CN.prepareStatement(ConsBuscar);
                ResultSet RS = PS.executeQuery();
                if (RS.next()) {
                    String ConsEliminar = "DELETE FROM tblProv WHERE Nit='" + Nit + "'";
                    PreparedStatement PS1 = CN.prepareStatement(ConsEliminar);
                    PS1.executeUpdate();
                    Limpiar();
                    JOptionPane.showMessageDialog(rootPane, "Proveedor eliminado con éxito");
                    ListarTabla();
                } else {
                    JOptionPane.showMessageDialog(rootPane,
                            "¡¡No existe el Proveedor en la base de datos!!",
                            "¡Error!",
                            JOptionPane.ERROR_MESSAGE);
                    txtNit.setText("");
                    txtNit.requestFocus();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,
                        "Error en la consulta:" + e.getMessage(),
                        "¡Error!",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Debe ingresar un Proveedor para validar",
                    "¡Error!",
                    JOptionPane.ERROR_MESSAGE);
            lblErrorNit.setVisible(false);
            txtNit.requestFocus();
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        String Nit = txtNit.getText();
        String Empresa = txtEmpresa.getText();
        String Telefono = txtTelefono.getText();
        String Dias = SElDias();
        int CantiD = Integer.parseInt(txtCantiD.getText());
        int PorceD = Integer.parseInt(txtPorceD.getText());

        if (Nit.equals("")) {
            lblErrorNit.setVisible(true);
            txtNit.requestFocus();
        } else if (Empresa.equals("")) {
            lblErrorEmpresa.setVisible(true);
            txtEmpresa.requestFocus();
        } else if (Telefono.equals("")) {
            lblErrorTelefono.setVisible(true);
            txtTelefono.requestFocus();
       

        } else {
            try {
                String ValNit = "SELECT * FROM TblProv WHERE Nit='" + Nit + "'";
                PreparedStatement PS = CN.prepareStatement(ValNit);
                ResultSet RS = PS.executeQuery();
                if (RS.next()) {
                    JOptionPane.showMessageDialog(rootPane, "¡Error! el Proveedor ya existe en la BD");
                } else {
                    String ConsInser = "INSERT INTO TblProv(Nit,"
                            + " Empresa,"
                            + " Telefono,"
                            + " Dias,"
                            + " CantiD,"
                            + " PorceD) "
                            + "VALUES ('" + Nit + "','" + Empresa + "','" + Telefono + "','" + Dias + "','" + CantiD + "','" + PorceD + "')";
                    PreparedStatement PS1 = CN.prepareStatement(ConsInser);
                    PS1.executeUpdate();
                    JOptionPane.showMessageDialog(rootPane, "Proveedor registrado con éxito");
                    ListarTabla();
                    Limpiar();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,
                        "Error en el registro:" + e.getMessage(),
                        "¡Error!",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void txtNitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNitActionPerformed

    private void txtTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoActionPerformed

    private void txtEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmpresaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmpresaActionPerformed

    private void txtCantiDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantiDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantiDActionPerformed

    private void txtPorceDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPorceDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPorceDActionPerformed

    private void jButtonSearchNitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchNitActionPerformed
        String Nit = txtNit.getText();

        if (!Nit.equalsIgnoreCase("")) {
            try {
                       DefaultTableModel modelo = new DefaultTableModel(){

 public boolean isCellEditable(int row, int column)
 {
     return false;
 }
  };        
                modelo.addColumn("Nit");
                modelo.addColumn("Empresa");
                modelo.addColumn("Telefono");
                modelo.addColumn("Dias De Entrega");
                modelo.addColumn("Cantidad Descuento");
                modelo.addColumn("Porcentaje Descuento");

                String ConsBuscar = "SELECT * FROM TblProv WHERE Nit LIKE'%" + Nit + "%'";
                PreparedStatement PS = CN.prepareStatement(ConsBuscar);
                ResultSet RS = PS.executeQuery();
                if (RS.next()) {
                    do {
                        Object[] Lista = {RS.getString(1), RS.getString(2), RS.getString(3), RS.getString(4), RS.getString(5), RS.getString(6),};
                        modelo.addRow(Lista);
                    } while (RS.next());
                    tbListProv.setModel(modelo);

                } else {
                    JOptionPane.showMessageDialog(rootPane,
                            "¡¡No existe el Proveedor en la base de datos!!",
                            "¡Error!",
                            JOptionPane.ERROR_MESSAGE);
                    txtNit.setText("");
                    txtNit.requestFocus();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,
                        "Error en la consulta:" + e.getMessage(),
                        "¡Error!",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Debe ingresar un Codigo para validar",
                    "¡Error!",
                    JOptionPane.ERROR_MESSAGE);
            lblErrorNit.setVisible(false);
            txtNit.requestFocus();
        }
        Limpiar();
    }//GEN-LAST:event_jButtonSearchNitActionPerformed

    private void jButtonSearchTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchTelefonoActionPerformed
        String Telefono = txtTelefono.getText();

        if (!Telefono.equalsIgnoreCase("")) {
            try {
                        DefaultTableModel modelo = new DefaultTableModel(){ public boolean isCellEditable(int row, int column) {     return false; }  };        
                modelo.addColumn("Nit");
                modelo.addColumn("Empresa");
                modelo.addColumn("Telefono");
                modelo.addColumn("Dias De Entrega");
                modelo.addColumn("Cantidad Descuento");
                modelo.addColumn("Porcentaje Descuento");

                String ConsBuscar = "SELECT * FROM TblProv WHERE Telefono LIKE'%" + Telefono + "%'";
                PreparedStatement PS = CN.prepareStatement(ConsBuscar);
                ResultSet RS = PS.executeQuery();
                if (RS.next()) {
                    do {
                        Object[] Lista = {RS.getString(1), RS.getString(2), RS.getString(3), RS.getString(4), RS.getString(5), RS.getString(6),};
                        modelo.addRow(Lista);
                    } while (RS.next());
                    tbListProv.setModel(modelo);

                } else {
                    JOptionPane.showMessageDialog(rootPane,
                            "¡¡No existe el Proveedor en la base de datos!!",
                            "¡Error!",
                            JOptionPane.ERROR_MESSAGE);
                    txtTelefono.setText("");
                    txtTelefono.requestFocus();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,
                        "Error en la consulta:" + e.getMessage(),
                        "¡Error!",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Debe ingresar un Apodo para validar",
                    "¡Error!",
                    JOptionPane.ERROR_MESSAGE);
            lblErrorTelefono.setVisible(false);
            txtTelefono.requestFocus();
        }
        Limpiar();
    }//GEN-LAST:event_jButtonSearchTelefonoActionPerformed

    private void jButtonSearchEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchEmpresaActionPerformed
        String Empresa = txtEmpresa.getText();

        if (!Empresa.equalsIgnoreCase("")) {
            try {
                        DefaultTableModel modelo = new DefaultTableModel(){ public boolean isCellEditable(int row, int column) {     return false; }  };        
                modelo.addColumn("Nit");
                modelo.addColumn("Empresa");
                modelo.addColumn("Telefono");
                modelo.addColumn("Dias De Entrega");
                modelo.addColumn("Cantidad Descuento");
                modelo.addColumn("Porcentaje Descuento");

                String ConsBuscar = "SELECT * FROM TblProv WHERE Empresa LIKE'%" + Empresa + "%'";
                PreparedStatement PS = CN.prepareStatement(ConsBuscar);
                ResultSet RS = PS.executeQuery();
                if (RS.next()) {
                    do {
                        Object[] Lista = {RS.getString(1), RS.getString(2), RS.getString(3), RS.getString(4), RS.getString(5), RS.getString(6),};
                        modelo.addRow(Lista);
                    } while (RS.next());
                    tbListProv.setModel(modelo);

                } else {
                    JOptionPane.showMessageDialog(rootPane,
                            "¡¡No existe el Proveedor en la base de datos!!",
                            "¡Error!",
                            JOptionPane.ERROR_MESSAGE);
                    txtEmpresa.setText("");
                    txtEmpresa.requestFocus();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,
                        "Error en la consulta:" + e.getMessage(),
                        "¡Error!",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Debe ingresar un Nombre para validar",
                    "¡Error!",
                    JOptionPane.ERROR_MESSAGE);
            lblErrorEmpresa.setVisible(false);
            txtEmpresa.requestFocus();
        }
        Limpiar();
    }//GEN-LAST:event_jButtonSearchEmpresaActionPerformed

    private void TblProvMouseClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TblProvMouseClick
        try {
            int row = this.tbListProv.getSelectedRow();
            this.txtNit.setText(String.valueOf(this.tbListProv.getValueAt(row, 0)));
            this.txtEmpresa.setText(String.valueOf(this.tbListProv.getValueAt(row, 1)));
            this.txtTelefono.setText(String.valueOf(this.tbListProv.getValueAt(row, 2)));
            this.txtCantiD.setText(String.valueOf(this.tbListProv.getValueAt(row, 4)));
            this.txtPorceD.setText(String.valueOf(this.tbListProv.getValueAt(row, 5)));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane,
                    "Error en la consulta:" + e.getMessage(),
                    "¡Error!",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_TblProvMouseClick

    private void jButtonSearchCantiDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchCantiDActionPerformed
        int CantiD = Integer.parseInt(txtCantiD.getText());

        if (CantiD != 0) {
            try {
                        DefaultTableModel modelo = new DefaultTableModel(){ public boolean isCellEditable(int row, int column) {     return false; }  };        
                modelo.addColumn("Nit");
                modelo.addColumn("Empresa");
                modelo.addColumn("Telefono");
                modelo.addColumn("Dias De Entrega");
                modelo.addColumn("Cantidad Descuento");
                modelo.addColumn("Porcentaje Descuento");

                String ConsBuscar = "SELECT * FROM TblProv WHERE CantiD LIKE'%" + CantiD + "%'";
                PreparedStatement PS = CN.prepareStatement(ConsBuscar);
                ResultSet RS = PS.executeQuery();
                if (RS.next()) {
                    do {
                        Object[] Lista = {RS.getString(1), RS.getString(2), RS.getString(3), RS.getString(4), RS.getString(5), RS.getString(6),};
                        modelo.addRow(Lista);
                    } while (RS.next());
                    tbListProv.setModel(modelo);

                } else {
                    JOptionPane.showMessageDialog(rootPane,
                            "¡¡No existe el Proveedor en la base de datos!!",
                            "¡Error!",
                            JOptionPane.ERROR_MESSAGE);
                    txtCantiD.setText("");
                    txtCantiD.requestFocus();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,
                        "Error en la consulta:" + e.getMessage(),
                        "¡Error!",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Debe ingresar una cantidad para validar",
                    "¡Error!",
                    JOptionPane.ERROR_MESSAGE);
            lblErrorCantiD.setVisible(false);
            txtCantiD.requestFocus();
        }
        Limpiar();
    }//GEN-LAST:event_jButtonSearchCantiDActionPerformed

    private void jButtonPorceDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPorceDActionPerformed
        int PorceD = Integer.parseInt(txtPorceD.getText());

        if (PorceD != 0) {
            try {
                        DefaultTableModel modelo = new DefaultTableModel(){ public boolean isCellEditable(int row, int column) {     return false; }  };        
                modelo.addColumn("Nit");
                modelo.addColumn("Empresa");
                modelo.addColumn("Telefono");
                modelo.addColumn("Dias De Entrega");
                modelo.addColumn("Cantidad Descuento");
                modelo.addColumn("Porcentaje Descuento");

                String ConsBuscar = "SELECT * FROM TblProv WHERE PorceD LIKE'%" + PorceD + "%'";
                PreparedStatement PS = CN.prepareStatement(ConsBuscar);
                ResultSet RS = PS.executeQuery();
                if (RS.next()) {
                    do {
                        Object[] Lista = {RS.getString(1), RS.getString(2), RS.getString(3), RS.getString(4), RS.getString(5), RS.getString(6),};
                        modelo.addRow(Lista);
                    } while (RS.next());
                    tbListProv.setModel(modelo);

                } else {
                    JOptionPane.showMessageDialog(rootPane,
                            "¡¡No existe el Proveedor en la base de datos!!",
                            "¡Error!",
                            JOptionPane.ERROR_MESSAGE);
                    txtPorceD.setText("");
                    txtPorceD.requestFocus();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,
                        "Error en la consulta:" + e.getMessage(),
                        "¡Error!",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Debe ingresar un valor para validar",
                    "¡Error!",
                    JOptionPane.ERROR_MESSAGE);
            lblErrorPorceD.setVisible(false);
            txtPorceD.requestFocus();
        }
        Limpiar();
    }//GEN-LAST:event_jButtonPorceDActionPerformed

    private void LUNESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LUNESActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LUNESActionPerformed

    private void MARTESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MARTESActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MARTESActionPerformed

    private void MIERCOLESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIERCOLESActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MIERCOLESActionPerformed

    private void JUEVESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JUEVESActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JUEVESActionPerformed

    private void VIERNESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VIERNESActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_VIERNESActionPerformed

    private void SABADOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SABADOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SABADOActionPerformed

    private void DOMINGOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DOMINGOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DOMINGOActionPerformed

    private void txtCantiDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantiDKeyTyped
           int key =evt.getKeyChar();
        boolean numero = key >= 48 && key <= 57;
        
        if (!numero) {
            evt.consume();
            
        }
    }//GEN-LAST:event_txtCantiDKeyTyped

    private void txtPorceDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPorceDKeyTyped
           int key =evt.getKeyChar();
        boolean numero = key >= 48 && key <= 57;
        
        if (!numero) {
            evt.consume();
            
        }
    }//GEN-LAST:event_txtPorceDKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmProv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmProv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmProv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmProv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmProv().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox DOMINGO;
    private javax.swing.JCheckBox JUEVES;
    private javax.swing.JCheckBox LUNES;
    private javax.swing.JCheckBox MARTES;
    private javax.swing.JCheckBox MIERCOLES;
    private javax.swing.JCheckBox SABADO;
    private javax.swing.JCheckBox VIERNES;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton jButtonPorceD;
    private javax.swing.JButton jButtonSearchCantiD;
    private javax.swing.JButton jButtonSearchEmpresa;
    private javax.swing.JButton jButtonSearchNit;
    private javax.swing.JButton jButtonSearchTelefono;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblErrorCantiD;
    private javax.swing.JLabel lblErrorEmpresa;
    private javax.swing.JLabel lblErrorNit;
    private javax.swing.JLabel lblErrorPorceD;
    private javax.swing.JLabel lblErrorTelefono;
    private javax.swing.JTable tbListProv;
    private javax.swing.JTextField txtCantiD;
    private javax.swing.JTextField txtEmpresa;
    private javax.swing.JTextField txtNit;
    private javax.swing.JTextField txtPorceD;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
